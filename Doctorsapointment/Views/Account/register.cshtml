@model Doctorsapointment.Models.doctor

@{
    Layout = null;
}

<!DOCTYPE html>
    <html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="keywords" content="Jukebox Registration Form web template Responsive, Login form web template,Flat Pricing tables,Flat Drop downs  Sign up Web Templates, Flat Web Templates, Login sign up Responsive web template, SmartPhone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
        <script type="application/x-javascript">
            addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
                   function hideURLbar(){ window.scrollTo(0,1); } </script>
        <!-- //custom-theme -->
        <script src="~/usertemplate/js/jquery-1.11.1.min.js" type="text/javascript"></script>
        <link href="~/usertemplate/css/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
        <link href="~/usertemplate/css/font-awesome.css" rel="stylesheet" type="text/css" media="all" />
        <link href="~/usertemplate/css/style.css" rel="stylesheet" type="text/css" media="all" />
        <link href="//fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet">




        <meta name="viewport" content="width=device-width" />
        <title>register</title>
    </head>
    <body class="bg agileinfo">
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")


        <h1 class="agile-head text-center">Onliine Doctor Appointmment</h1>
        <div class="container-w3l">
            <div class="w3_agileits-content1">
                <h2 class="text-center">register your account</h2>
                <div class="form_w3layouts">
                    <form action="#" method="post" class="agile_form">
                        <div class="agileits">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @*<input type="text" name="name" class="username" placeholder="username" required="">*@
                            <div style="float:left">
                                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2 " })
                            </div>
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })

                            @*<div class="w3ls-icon">
                                <i class="fa fa-user" aria-hidden="true"></i>
                            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
                            @*<input type="email" name="name" class="email" placeholder="example@email.com" required="">*@
                            @*<div class="w3ls-icon">
                                <i class="fa fa-envelope-o" aria-hidden="true"></i>
                            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                            @*<input type="text" name="name" class="genre" placeholder="Genre" required="">*@
                            @*<div class="w3ls-icon">
                                <i class="fa fa-headphones" aria-hidden="true"></i>
                            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                            @*<input type="password" name="name" class="password" placeholder="password" required="">*@
                            @*<div class="w3ls-icon">
                                <i class="fa fa-unlock-alt" aria-hidden="true"></i>
                            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                            @*<input type="password" name="name" class="password" placeholder="confirm password" required="">*@
                            @*<div class="w3ls-icon">
                <i class="fa fa-unlock-alt" aria-hidden="true"></i>
            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.speciality, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            @Html.EditorFor(model => model.speciality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.speciality, "", new { @class = "text-danger" })
                            @*<input type="password" name="name" class="password" placeholder="confirm password" required="">*@
                            @*<div class="w3ls-icon">
                <i class="fa fa-unlock-alt" aria-hidden="true"></i>
            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.pmdc, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            @Html.EditorFor(model => model.pmdc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.pmdc, "", new { @class = "text-danger" })
                            @*<input type="password" name="name" class="password" placeholder="confirm password" required="">*@
                            @*<div class="w3ls-icon">
                <i class="fa fa-unlock-alt" aria-hidden="true"></i>
            </div>*@
                        </div>
                        <div class="agileits">
                            <div style="float:left">
                                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                @*<input type="password" name="name" class="password" placeholder="confirm password" required="">*@
                                @*<div class="w3ls-icon">
                <i class="fa fa-unlock-alt" aria-hidden="true"></i>
            </div>*@
                            </div>


                            <div class="content-bottom">
                                <div class="submit-w3l">
                                    <input type="submit" value="Create"  />
                                </div>
                                <div class="clear"></div>
                            </div>
</form>
                </div>
            </div>
        </div>
        <div class="w3_agileits-content2">
            <h3 class="text-center">JukeBox</h3>
            <div class="agileinfo-list">
                <ul>
                    <li><i class="fa fa-play" aria-hidden="true"></i>Aenean ac imperdiet libero</li>
                    <li><i class="fa fa-play" aria-hidden="true"></i>Proin ut leo sapien. </li>
                    <li><i class="fa fa-play" aria-hidden="true"></i>usce mattis tortor ipsum.</li>
                    <li><i class="fa fa-play" aria-hidden="true"></i>Proin ut leo sapien. </li>
                    <li><i class="fa fa-play" aria-hidden="true"></i>Fusce mattis tortor ipsum.</li>
                </ul>
            </div>
        </div>
        <div class="clear"></div>
        <div class="agileits-w3layouts-copyright text-center">
            <p>© 2017 JukeBox Registration Form. All rights reserved | Design by <a href="//w3layouts.com/">W3layouts</a></p>
        </div>
        <!-- pop-up-box -->
        <script src="js/jquery.magnific-popup.js" type="text/javascript"></script>
        <!--//pop-up-box -->
        <script>
            $(document).ready(function () {
                $('.w3_play_icon,.w3_play_icon1,.w3_play_icon2').magnificPopup({
                    type: 'inline',
                    fixedContentPos: false,
                    fixedBgPos: true,
                    overflowY: 'auto',
                    closeBtnInside: true,
                    preloader: false,
                    midClick: true,
                    removalDelay: 300,
                    mainClass: 'my-mfp-zoom-in'
                });

            });
        </script>





        @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>doctor</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.speciality, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.speciality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.speciality, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.pmdc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pmdc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pmdc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }*@

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </body>
    </html>
